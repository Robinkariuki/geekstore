{"ast":null,"code":"import _slicedToArray from\"/home/robin/Desktop/robin/econ/shopbackend/shopfrontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from\"react\";import{Form,Button}from\"react-bootstrap\";import{useDispatch,useSelector}from\"react-redux\";import FormContainer from\"../FormContainer\";import{saveShippingAddress}from'../../actions/cartActions';import Checkoutsteps from\"../Checkoutsteps\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var ShippingScreen=function ShippingScreen(_ref){var history=_ref.history;var cart=useSelector(function(state){return state.cart;});var shippingAddress=cart.shippingAddress;var dispatch=useDispatch();var _useState=useState(shippingAddress.address),_useState2=_slicedToArray(_useState,2),address=_useState2[0],setAddress=_useState2[1];var _useState3=useState(shippingAddress.city),_useState4=_slicedToArray(_useState3,2),city=_useState4[0],setCity=_useState4[1];var _useState5=useState(shippingAddress.postalCode),_useState6=_slicedToArray(_useState5,2),postalCode=_useState6[0],setPostalCode=_useState6[1];var _useState7=useState(shippingAddress.country),_useState8=_slicedToArray(_useState7,2),country=_useState8[0],setCountry=_useState8[1];var submitHandler=function submitHandler(e){e.preventDefault();dispatch(saveShippingAddress({address:address,city:city,postalCode:postalCode,country:country}));history.push('/payment');};return/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsxs(FormContainer,{children:[/*#__PURE__*/_jsx(Checkoutsteps,{step1:true,step2:true}),/*#__PURE__*/_jsx(\"h1\",{children:\"shipping \"}),/*#__PURE__*/_jsxs(Form,{onSubmit:submitHandler,children:[/*#__PURE__*/_jsxs(Form.Group,{controlId:\"address\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Address\"}),/*#__PURE__*/_jsx(Form.Control,{required:true,type:\"text\",placeholder:\"Enter Address\",value:address?address:' ',onChange:function onChange(e){return setAddress(e.target.value);}})]}),/*#__PURE__*/_jsxs(Form.Group,{controlId:\"city\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"City\"}),/*#__PURE__*/_jsx(Form.Control,{required:true,type:\"text\",placeholder:\"Enter city\",value:city?city:' ',onChange:function onChange(e){return setCity(e.target.value);}})]}),/*#__PURE__*/_jsxs(Form.Group,{controlId:\"postalCode\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Postal Code\"}),/*#__PURE__*/_jsx(Form.Control,{required:true,type:\"text\",placeholder:\"Enter Postal Code\",value:postalCode?postalCode:' ',onChange:function onChange(e){return setPostalCode(e.target.value);}})]}),/*#__PURE__*/_jsxs(Form.Group,{controlId:\"country\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Country\"}),/*#__PURE__*/_jsx(Form.Control,{required:true,type:\"text\",placeholder:\"Enter Country\",value:country?country:' ',onChange:function onChange(e){return setCountry(e.target.value);}})]}),/*#__PURE__*/_jsx(Button,{type:\"submit\",variant:\"primary\",children:\"Continue\"})]})]})});};export default ShippingScreen;","map":{"version":3,"sources":["/home/robin/Desktop/robin/econ/shopbackend/shopfrontend/src/components/Screens/ShippingScreen.js"],"names":["React","useState","Form","Button","useDispatch","useSelector","FormContainer","saveShippingAddress","Checkoutsteps","ShippingScreen","history","cart","state","shippingAddress","dispatch","address","setAddress","city","setCity","postalCode","setPostalCode","country","setCountry","submitHandler","e","preventDefault","push","target","value"],"mappings":"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","sourcesContent":["\nimport React, { useState} from \"react\"\nimport { Form, Button} from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport FormContainer from \"../FormContainer\";\nimport { saveShippingAddress } from '../../actions/cartActions'\nimport Checkoutsteps from \"../Checkoutsteps\";\n\n\nconst ShippingScreen = ({ history }) => {\n\n\n const cart = useSelector(state => state.cart)\n const {shippingAddress} = cart\n\n const dispatch = useDispatch()\n\n    const[address, setAddress] = useState(shippingAddress.address)\n    const[city, setCity] = useState(shippingAddress.city)\n    const[postalCode, setPostalCode] = useState(shippingAddress.postalCode)\n    const[country, setCountry] = useState(shippingAddress.country)\n\n\n    const submitHandler =(e)=>{\n        e.preventDefault()\n        dispatch(saveShippingAddress({address,city,postalCode,country}))\n        history.push('/payment')\n    }\n    return (\n        <div>\n            <FormContainer>\n            <Checkoutsteps step1 step2/> \n            <h1>shipping </h1>\n            <Form onSubmit={submitHandler}>\n\n          <Form.Group controlId=\"address\">\n          <Form.Label>Address</Form.Label>\n          <Form.Control\n            required\n            type=\"text\"\n            placeholder=\"Enter Address\"\n            value={address ? address : ' ' }\n            onChange={(e) => setAddress(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n              \n\n        <Form.Group controlId=\"city\">\n          <Form.Label>City</Form.Label>\n          <Form.Control\n            required\n            type=\"text\"\n            placeholder=\"Enter city\"\n            value={city ? city : ' ' }\n            onChange={(e) => setCity(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n\n\n        <Form.Group controlId=\"postalCode\">\n          <Form.Label>Postal Code</Form.Label>\n          <Form.Control\n            required\n            type=\"text\"\n            placeholder=\"Enter Postal Code\"\n            value={postalCode ? postalCode : ' ' }\n            onChange={(e) => setPostalCode(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n\n\n        <Form.Group controlId=\"country\">\n          <Form.Label>Country</Form.Label>\n          <Form.Control\n            required\n            type=\"text\"\n            placeholder=\"Enter Country\"\n            value={country ? country : ' ' }\n            onChange={(e) => setCountry(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n        <Button type='submit' variant='primary'>Continue</Button>\n            </Form>\n            </FormContainer>\n          \n        </div>\n    )\n}\n \nexport default ShippingScreen\n"]},"metadata":{},"sourceType":"module"}