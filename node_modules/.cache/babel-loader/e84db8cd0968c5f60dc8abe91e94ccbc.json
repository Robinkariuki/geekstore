{"ast":null,"code":"import { CART_ADD_ITEM, CART_REMOVE_ITEM } from \"../constants/cartConstants\";\nexport const cartReducer = (state = {\n  cartItems: []\n}, action) => {\n  switch (action.type) {\n    case CART_ADD_ITEM:\n      const item = action.payload;\n      const existItem = state.cartItems.find(x => x.product === item.product);\n\n      if (existItem) {\n        return { ...state,\n          cartItems: state.cartItems.map(x => x.product === existItem.product ? item : x)\n        };\n      } else {\n        return { ...state,\n          cartItems: [...state.cartItems, item]\n        };\n      }\n\n    case CART_REMOVE_ITEM:\n      return { ...state,\n        cartItems: state.cartItems.filter(x => x.product)\n      };\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/home/robin/Desktop/robin/econ/shopfrontend/src/reducers/cartReducers.js"],"names":["CART_ADD_ITEM","CART_REMOVE_ITEM","cartReducer","state","cartItems","action","type","item","payload","existItem","find","x","product","map","filter"],"mappings":"AAAA,SAASA,aAAT,EAAuBC,gBAAvB,QAA+C,4BAA/C;AAKA,OAAO,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAC;AAACC,EAAAA,SAAS,EAAC;AAAX,CAAP,EAAsBC,MAAtB,KAA+B;AACtD,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKN,aAAL;AACI,YAAMO,IAAI,GAAGF,MAAM,CAACG,OAApB;AACA,YAAMC,SAAS,GAAGN,KAAK,CAACC,SAAN,CAAgBM,IAAhB,CAAqBC,CAAC,IAAIA,CAAC,CAACC,OAAF,KAAcL,IAAI,CAACK,OAA7C,CAAlB;;AAEA,UAAGH,SAAH,EAAa;AACT,eAAM,EACF,GAAGN,KADD;AAEFC,UAAAA,SAAS,EAACD,KAAK,CAACC,SAAN,CAAgBS,GAAhB,CAAoBF,CAAC,IAC3BA,CAAC,CAACC,OAAF,KAAcH,SAAS,CAACG,OAAxB,GAAkCL,IAAlC,GAAyCI,CADnC;AAFR,SAAN;AAMH,OAPD,MAOK;AACD,eAAM,EACF,GAAGR,KADD;AAEFC,UAAAA,SAAS,EAAC,CAAC,GAAGD,KAAK,CAACC,SAAV,EAAoBG,IAApB;AAFR,SAAN;AAIH;;AAED,SAAKN,gBAAL;AACI,aAAM,EACF,GAAGE,KADD;AAEFC,QAAAA,SAAS,EAACD,KAAK,CAACC,SAAN,CAAgBU,MAAhB,CAAuBH,CAAC,IAAIA,CAAC,CAACC,OAA9B;AAFR,OAAN;;AAIR;AACI,aAAOT,KAAP;AAzBR;AA2BH,CA5BM","sourcesContent":["import { CART_ADD_ITEM,CART_REMOVE_ITEM } from \"../constants/cartConstants\";\n\n\n\n\nexport const cartReducer  =(state={cartItems:[]},action)=>{\n    switch(action.type){\n        case CART_ADD_ITEM:\n            const item = action.payload\n            const existItem = state.cartItems.find(x => x.product === item.product)\n\n            if(existItem){\n                return{\n                    ...state,\n                    cartItems:state.cartItems.map(x =>\n                        x.product === existItem.product ? item : x )\n                }\n\n            }else{\n                return{\n                    ...state,\n                    cartItems:[...state.cartItems,item]\n                }\n            }\n\n            case CART_REMOVE_ITEM:\n                return{\n                    ...state,\n                    cartItems:state.cartItems.filter(x => x.product )\n                }\n        default:\n            return state\n    }\n}"]},"metadata":{},"sourceType":"module"}