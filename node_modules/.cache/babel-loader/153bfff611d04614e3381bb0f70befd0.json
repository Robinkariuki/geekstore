{"ast":null,"code":"import axios from \"axios\";\nimport { USER_LOGIN_REQUEST, USER_LOGIN_FAIL, USER_LOGIN_SUCCESS, USER_LOGOUT, USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS, USER_REGISTER_FAIL, USER_DETAILS_REQUEST, USER_DETAILS_SUCCESS, USER_DETAILS_FAIL, USER_DETAILS_RESET, USER_UPDATE_PROFILE_REQUEST, USER_UPDATE_PROFILE_SUCCESS, USER_UPDATE_PROFILE_FAIL } from \"../constants/userConstants\";\nexport const login = (email, password) => async dispatch => {\n  try {\n    dispatch({\n      type: USER_LOGIN_REQUEST\n    });\n    const config = {\n      headers: {\n        \"content-type\": \"application/json\"\n      }\n    };\n    const {\n      data\n    } = await axios.post(\"/api/users/login/\", {\n      username: email,\n      password: password\n    }, config);\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_LOGIN_FAIL,\n      payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n    });\n  }\n};\nexport const register = (name, email, password) => async dispatch => {\n  try {\n    dispatch({\n      type: USER_REGISTER_REQUEST\n    });\n    const config = {\n      headers: {\n        \"content-type\": \"application/json\"\n      }\n    };\n    const {\n      data\n    } = await axios.post(\"/api/users/register/\", {\n      'name': name,\n      'email': email,\n      'password': password\n    }, config);\n    dispatch({\n      type: USER_REGISTER_SUCCESS,\n      payload: data\n    });\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_REGISTER_FAIL,\n      payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n    });\n  }\n};\nexport const getUserDetails = id => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_DETAILS_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        \"content-type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(`/api/users/${id}/`, config);\n    dispatch({\n      type: USER_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_DETAILS_FAIL,\n      payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n    });\n  }\n};\nexport const updateUserProfile = user => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_UPDATE_PROFILE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        \"content-type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.put(`/api/users/profile/update`, user, config);\n    dispatch({\n      type: USER_UPDATE_PROFILE_SUCCESS,\n      payload: data\n    });\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_UPDATE_PROFILE_FAIL,\n      payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n    });\n  }\n};\nexport const logout = () => dispatch => {\n  localStorage.removeItem('userInfo');\n  dispatch({\n    type: USER_LOGOUT\n  });\n  dispatch({\n    type: USER_DETAILS_RESET\n  });\n  disp;\n};","map":{"version":3,"sources":["/home/robin/Desktop/robin/econ/shopfrontend/src/actions/userActions.js"],"names":["axios","USER_LOGIN_REQUEST","USER_LOGIN_FAIL","USER_LOGIN_SUCCESS","USER_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_DETAILS_FAIL","USER_DETAILS_RESET","USER_UPDATE_PROFILE_REQUEST","USER_UPDATE_PROFILE_SUCCESS","USER_UPDATE_PROFILE_FAIL","login","email","password","dispatch","type","config","headers","data","post","username","payload","localStorage","setItem","JSON","stringify","error","response","detail","message","register","name","getUserDetails","id","getState","userLogin","userInfo","Authorization","token","get","updateUserProfile","user","put","logout","removeItem","disp"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,kBADF,EAEEC,eAFF,EAGEC,kBAHF,EAIEC,WAJF,EAMEC,qBANF,EAOEC,qBAPF,EAQEC,kBARF,EAUEC,oBAVF,EAWEC,oBAXF,EAYEC,iBAZF,EAaEC,kBAbF,EAgBEC,2BAhBF,EAiBEC,2BAjBF,EAkBEC,wBAlBF,QAqBO,4BArBP;AAuBA,OAAO,MAAMC,KAAK,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB,MAAOC,QAAP,IAAoB;AAC5D,MAAI;AACFA,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAElB;AADC,KAAD,CAAR;AAGA,UAAMmB,MAAM,GAAG;AACbC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT;AADI,KAAf;AAKA,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMtB,KAAK,CAACuB,IAAN,CACrB,mBADqB,EAErB;AAAEC,MAAAA,QAAQ,EAAER,KAAZ;AAAmBC,MAAAA,QAAQ,EAAEA;AAA7B,KAFqB,EAGrBG,MAHqB,CAAvB;AAKAF,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEhB,kBADC;AAEPsB,MAAAA,OAAO,EAAEH;AAFF,KAAD,CAAR;AAIAI,IAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiCC,IAAI,CAACC,SAAL,CAAeP,IAAf,CAAjC;AACD,GAnBD,CAmBE,OAAOQ,KAAP,EAAc;AACdZ,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEjB,eADC;AAEPuB,MAAAA,OAAO,EACLK,KAAK,CAACC,QAAN,IAAkBD,KAAK,CAACC,QAAN,CAAeT,IAAf,CAAoBU,MAAtC,GACIF,KAAK,CAACC,QAAN,CAAeT,IAAf,CAAoBU,MADxB,GAEIF,KAAK,CAACG;AALL,KAAD,CAAR;AAOD;AACF,CA7BM;AAgCP,OAAO,MAAMC,QAAQ,GAAG,CAACC,IAAD,EAAMnB,KAAN,EAAaC,QAAb,KAA0B,MAAOC,QAAP,IAAoB;AAClE,MAAI;AACFA,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEd;AADC,KAAD,CAAR;AAGA,UAAMe,MAAM,GAAG;AACbC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT;AADI,KAAf;AAKA,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMtB,KAAK,CAACuB,IAAN,CACrB,sBADqB,EAErB;AAAE,cAAOY,IAAT;AAAe,eAAQnB,KAAvB;AAA8B,kBAAYC;AAA1C,KAFqB,EAGrBG,MAHqB,CAAvB;AAKAF,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEb,qBADC;AAEPmB,MAAAA,OAAO,EAAEH;AAFF,KAAD,CAAR;AAIAJ,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEhB,kBADC;AAEPsB,MAAAA,OAAO,EAAEH;AAFF,KAAD,CAAR;AAIAI,IAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiCC,IAAI,CAACC,SAAL,CAAeP,IAAf,CAAjC;AACD,GAvBD,CAuBE,OAAOQ,KAAP,EAAc;AACdZ,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEZ,kBADC;AAEPkB,MAAAA,OAAO,EACLK,KAAK,CAACC,QAAN,IAAkBD,KAAK,CAACC,QAAN,CAAeT,IAAf,CAAoBU,MAAtC,GACIF,KAAK,CAACC,QAAN,CAAeT,IAAf,CAAoBU,MADxB,GAEIF,KAAK,CAACG;AALL,KAAD,CAAR;AAOD;AACF,CAjCI;AAoCL,OAAO,MAAMG,cAAc,GAAIC,EAAD,IAAQ,OAAOnB,QAAP,EAAgBoB,QAAhB,KAA6B;AACjE,MAAI;AACFpB,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEX;AADC,KAAD,CAAR;AAIA,UAAM;AACJ+B,MAAAA,SAAS,EAAC;AAAEC,QAAAA;AAAF;AADN,QAEFF,QAAQ,EAFZ;AAIA,UAAMlB,MAAM,GAAG;AACbC,MAAAA,OAAO,EAAE;AACP,wBAAgB,kBADT;AAEPoB,QAAAA,aAAa,EAAG,UAASD,QAAQ,CAACE,KAAM;AAFjC;AADI,KAAf;AAMA,UAAM;AAAEpB,MAAAA;AAAF,QAAW,MAAMtB,KAAK,CAAC2C,GAAN,CACpB,cAAaN,EAAG,GADI,EAErBjB,MAFqB,CAAvB;AAIAF,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEV,oBADC;AAEPgB,MAAAA,OAAO,EAAEH;AAFF,KAAD,CAAR;AAKD,GAxBD,CAwBE,OAAOQ,KAAP,EAAc;AACdZ,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAET,iBADC;AAEPe,MAAAA,OAAO,EACLK,KAAK,CAACC,QAAN,IAAkBD,KAAK,CAACC,QAAN,CAAeT,IAAf,CAAoBU,MAAtC,GACIF,KAAK,CAACC,QAAN,CAAeT,IAAf,CAAoBU,MADxB,GAEIF,KAAK,CAACG;AALL,KAAD,CAAR;AAOD;AACF,CAlCM;AAqCT,OAAO,MAAMW,iBAAiB,GAAIC,IAAD,IAAU,OAAO3B,QAAP,EAAgBoB,QAAhB,KAA6B;AACpE,MAAI;AACFpB,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEP;AADC,KAAD,CAAR;AAIA,UAAM;AACJ2B,MAAAA,SAAS,EAAC;AAAEC,QAAAA;AAAF;AADN,QAEFF,QAAQ,EAFZ;AAIA,UAAMlB,MAAM,GAAG;AACbC,MAAAA,OAAO,EAAE;AACP,wBAAgB,kBADT;AAEPoB,QAAAA,aAAa,EAAG,UAASD,QAAQ,CAACE,KAAM;AAFjC;AADI,KAAf;AAMA,UAAM;AAAEpB,MAAAA;AAAF,QAAW,MAAMtB,KAAK,CAAC8C,GAAN,CACpB,2BADoB,EAErBD,IAFqB,EAGrBzB,MAHqB,CAAvB;AAKAF,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEN,2BADC;AAEPY,MAAAA,OAAO,EAAEH;AAFF,KAAD,CAAR;AAIAJ,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEhB,kBADC;AAEPsB,MAAAA,OAAO,EAAEH;AAFF,KAAD,CAAR;AAIAI,IAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiCC,IAAI,CAACC,SAAL,CAAeP,IAAf,CAAjC;AAED,GA9BD,CA8BE,OAAOQ,KAAP,EAAc;AACdZ,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEL,wBADC;AAEPW,MAAAA,OAAO,EACLK,KAAK,CAACC,QAAN,IAAkBD,KAAK,CAACC,QAAN,CAAeT,IAAf,CAAoBU,MAAtC,GACIF,KAAK,CAACC,QAAN,CAAeT,IAAf,CAAoBU,MADxB,GAEIF,KAAK,CAACG;AALL,KAAD,CAAR;AAOD;AACF,CAxCI;AA4CP,OAAO,MAAMc,MAAM,GAAE,MAAK7B,QAAD,IAAY;AACjCQ,EAAAA,YAAY,CAACsB,UAAb,CAAwB,UAAxB;AACA9B,EAAAA,QAAQ,CAAC;AACLC,IAAAA,IAAI,EAACf;AADA,GAAD,CAAR;AAGAc,EAAAA,QAAQ,CAAC;AAACC,IAAAA,IAAI,EAACR;AAAN,GAAD,CAAR;AACAsC,EAAAA,IAAI;AACP,CAPM","sourcesContent":["import axios from \"axios\";\nimport {\n  USER_LOGIN_REQUEST,\n  USER_LOGIN_FAIL,\n  USER_LOGIN_SUCCESS,\n  USER_LOGOUT,\n\n  USER_REGISTER_REQUEST,\n  USER_REGISTER_SUCCESS,\n  USER_REGISTER_FAIL,\n\n  USER_DETAILS_REQUEST,\n  USER_DETAILS_SUCCESS,\n  USER_DETAILS_FAIL,\n  USER_DETAILS_RESET,\n\n\n  USER_UPDATE_PROFILE_REQUEST,\n  USER_UPDATE_PROFILE_SUCCESS, \n  USER_UPDATE_PROFILE_FAIL,\n  \n\n} from \"../constants/userConstants\";\n\nexport const login = (email, password) => async (dispatch) => {\n  try {\n    dispatch({\n      type: USER_LOGIN_REQUEST,\n    });\n    const config = {\n      headers: {\n        \"content-type\": \"application/json\",\n      },\n    };\n    const { data } = await axios.post(\n      \"/api/users/login/\",\n      { username: email, password: password },\n      config\n    );\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data,\n    });\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_LOGIN_FAIL,\n      payload:\n        error.response && error.response.data.detail\n          ? error.response.data.detail\n          : error.message,\n    });\n  }\n};\n\n\nexport const register = (name,email, password) => async (dispatch) => {\n    try {\n      dispatch({\n        type: USER_REGISTER_REQUEST,\n      });\n      const config = {\n        headers: {\n          \"content-type\": \"application/json\",\n        },\n      };\n      const { data } = await axios.post(\n        \"/api/users/register/\",\n        { 'name':name, 'email':email, 'password': password },\n        config\n      );\n      dispatch({\n        type: USER_REGISTER_SUCCESS,\n        payload: data,\n      });\n      dispatch({\n        type: USER_LOGIN_SUCCESS,\n        payload: data,\n      });\n      localStorage.setItem(\"userInfo\", JSON.stringify(data));\n    } catch (error) {\n      dispatch({\n        type: USER_REGISTER_FAIL,\n        payload:\n          error.response && error.response.data.detail\n            ? error.response.data.detail\n            : error.message,\n      });\n    }\n  };\n\n\n  export const getUserDetails = (id) => async (dispatch,getState) => {\n    try {\n      dispatch({\n        type: USER_DETAILS_REQUEST,\n      });\n\n      const {\n        userLogin:{ userInfo },\n      } = getState()\n\n      const config = {\n        headers: {\n          \"content-type\": \"application/json\",\n          Authorization: `Bearer ${userInfo.token}` \n        },\n      };\n      const { data } = await axios.get(\n        `/api/users/${id}/`,\n        config\n      );\n      dispatch({\n        type: USER_DETAILS_SUCCESS,\n        payload: data,\n      });\n\n    } catch (error) {\n      dispatch({\n        type: USER_DETAILS_FAIL,\n        payload:\n          error.response && error.response.data.detail\n            ? error.response.data.detail\n            : error.message,\n      });\n    }\n  };\n\n\nexport const updateUserProfile = (user) => async (dispatch,getState) => {\n    try {\n      dispatch({\n        type: USER_UPDATE_PROFILE_REQUEST,\n      });\n\n      const {\n        userLogin:{ userInfo },\n      } = getState()\n\n      const config = {\n        headers: {\n          \"content-type\": \"application/json\",\n          Authorization: `Bearer ${userInfo.token}` \n        },\n      };\n      const { data } = await axios.put(\n        `/api/users/profile/update`,\n        user,\n        config\n      );\n      dispatch({\n        type: USER_UPDATE_PROFILE_SUCCESS,\n        payload: data,\n      });\n      dispatch({\n        type: USER_LOGIN_SUCCESS,\n        payload: data,\n      });\n      localStorage.setItem(\"userInfo\", JSON.stringify(data));\n      \n    } catch (error) {\n      dispatch({\n        type: USER_UPDATE_PROFILE_FAIL,\n        payload:\n          error.response && error.response.data.detail\n            ? error.response.data.detail\n            : error.message,\n      });\n    }\n  };\n\n\n\nexport const logout =()=>(dispatch)=>{\n    localStorage.removeItem('userInfo')\n    dispatch({\n        type:USER_LOGOUT\n    })\n    dispatch({type:USER_DETAILS_RESET})\n    disp\n}"]},"metadata":{},"sourceType":"module"}