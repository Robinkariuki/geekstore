{"ast":null,"code":"import axios from \"axios\";\nimport { ORDER_CREATE_REQUEST, ORDER_CREATE_SUCCESS, ORDER_CREATE_FAIL } from \"../constants/orderConstants\";\nimport { CART_CLEAR_ITEMS } from \"../constants/cartConstants\";\nexport const createOrder = order => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_CREATE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        \"content-type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.post(`/api/orders/add/`, order, config);\n    dispatch({\n      type: ORDER_CREATE_SUCCESS,\n      payload: data\n    });\n    dispatch({\n      type: C,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_CREATE_FAIL,\n      payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n    });\n  }\n};","map":{"version":3,"sources":["/home/robin/Desktop/robin/econ/shopfrontend/src/actions/orderActions.js"],"names":["axios","ORDER_CREATE_REQUEST","ORDER_CREATE_SUCCESS","ORDER_CREATE_FAIL","CART_CLEAR_ITEMS","createOrder","order","dispatch","getState","type","userLogin","userInfo","config","headers","Authorization","token","data","post","payload","C","error","response","detail","message"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACIC,oBADJ,EAEIC,oBAFJ,EAGIC,iBAHJ,QAIS,6BAJT;AAMA,SAASC,gBAAT,QAAiC,4BAAjC;AAEE,OAAO,MAAMC,WAAW,GAAIC,KAAD,IAAW,OAAOC,QAAP,EAAgBC,QAAhB,KAA6B;AACjE,MAAI;AACFD,IAAAA,QAAQ,CAAC;AACPE,MAAAA,IAAI,EAAER;AADC,KAAD,CAAR;AAIA,UAAM;AACJS,MAAAA,SAAS,EAAC;AAAEC,QAAAA;AAAF;AADN,QAEFH,QAAQ,EAFZ;AAIA,UAAMI,MAAM,GAAG;AACbC,MAAAA,OAAO,EAAE;AACP,wBAAgB,kBADT;AAEPC,QAAAA,aAAa,EAAG,UAASH,QAAQ,CAACI,KAAM;AAFjC;AADI,KAAf;AAMA,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMhB,KAAK,CAACiB,IAAN,CACpB,kBADoB,EAErBX,KAFqB,EAGrBM,MAHqB,CAAvB;AAKAL,IAAAA,QAAQ,CAAC;AACPE,MAAAA,IAAI,EAAEP,oBADC;AAEPgB,MAAAA,OAAO,EAAEF;AAFF,KAAD,CAAR;AAKAT,IAAAA,QAAQ,CAAC;AACPE,MAAAA,IAAI,EAAEU,CADC;AAEPD,MAAAA,OAAO,EAAEF;AAFF,KAAD,CAAR;AAMD,GA/BD,CA+BE,OAAOI,KAAP,EAAc;AACdb,IAAAA,QAAQ,CAAC;AACPE,MAAAA,IAAI,EAAEN,iBADC;AAEPe,MAAAA,OAAO,EACLE,KAAK,CAACC,QAAN,IAAkBD,KAAK,CAACC,QAAN,CAAeL,IAAf,CAAoBM,MAAtC,GACIF,KAAK,CAACC,QAAN,CAAeL,IAAf,CAAoBM,MADxB,GAEIF,KAAK,CAACG;AALL,KAAD,CAAR;AAOD;AACF,CAzCM","sourcesContent":["import axios from \"axios\";\nimport {\n    ORDER_CREATE_REQUEST,\n    ORDER_CREATE_SUCCESS,\n    ORDER_CREATE_FAIL,\n  } from \"../constants/orderConstants\";\n  \nimport { CART_CLEAR_ITEMS } from \"../constants/cartConstants\";  \n\n  export const createOrder = (order) => async (dispatch,getState) => {\n    try {\n      dispatch({\n        type: ORDER_CREATE_REQUEST\n      });\n\n      const {\n        userLogin:{ userInfo },\n      } = getState()\n\n      const config = {\n        headers: {\n          \"content-type\": \"application/json\",\n          Authorization: `Bearer ${userInfo.token}` \n        },\n      };\n      const { data } = await axios.post(\n        `/api/orders/add/`,\n        order,\n        config\n      );\n      dispatch({\n        type: ORDER_CREATE_SUCCESS,\n        payload: data,\n      });\n\n      dispatch({\n        type: C,\n        payload: data,\n      });\n\n   \n    } catch (error) {\n      dispatch({\n        type: ORDER_CREATE_FAIL,\n        payload:\n          error.response && error.response.data.detail\n            ? error.response.data.detail\n            : error.message,\n      });\n    }\n  };"]},"metadata":{},"sourceType":"module"}