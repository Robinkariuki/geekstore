{"ast":null,"code":"var _jsxFileName = \"/home/robin/Desktop/robin/econ/shopfrontend/src/components/Screens/PaymentScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Form, Button, Col } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { register } from \"../../actions/userActions\";\nimport FormContainer from \"../FormContainer\";\nimport Checkoutsteps from \"../Checkoutsteps\";\nimport { saveShippingAddress } from \"../../actions/cartActions\"; // import { savePaymentMethod } from '../../actions/cartActions'\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PaymentScreen = ({\n  history\n}) => {\n  _s();\n\n  const cart = useSelector(state => state.cart);\n  const {\n    shippingAddress\n  } = cart;\n  const dispatch = useDispatch();\n  const [paymentMethod, setPaymentMethod] = useState('PayPal');\n\n  if (!saveShippingAddress.address) {\n    history.push('/shipping');\n  }\n\n  const submitHandler = e => {\n    e.preventDefault(); // dispatch(savePaymentMethod(paymentMethod))\n\n    history.push('/placeorder');\n  };\n\n  return /*#__PURE__*/_jsxDEV(FormContainer, {\n    children: [/*#__PURE__*/_jsxDEV(Checkoutsteps, {\n      step1: true,\n      step2: true,\n      step3: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          as: \"legend\",\n          children: \"select Method\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(Form.check, {\n            type: \"radio\",\n            label: \"PayPal or Credit Card\",\n            id: \"paypal\",\n            name: \"paymentMethod\",\n            checked: true,\n            onChange: e => setPaymentMethod(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        variant: \"primary\",\n        children: \"Continue\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n};\n\n_s(PaymentScreen, \"t1Mwi09/06eC4dNhvxIruzvGnBA=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = PaymentScreen;\nexport default PaymentScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"PaymentScreen\");","map":{"version":3,"sources":["/home/robin/Desktop/robin/econ/shopfrontend/src/components/Screens/PaymentScreen.js"],"names":["React","useState","useEffect","Form","Button","Col","useDispatch","useSelector","register","FormContainer","Checkoutsteps","saveShippingAddress","PaymentScreen","history","cart","state","shippingAddress","dispatch","paymentMethod","setPaymentMethod","address","push","submitHandler","e","preventDefault","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,IAAT,EAAeC,MAAf,EAAsBC,GAAtB,QAAgC,iBAAhC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,QAAT,QAAyB,2BAAzB;AACA,OAAOC,aAAP,MAA0B,kBAA1B;AACA,OAAOC,aAAP,MAA0B,kBAA1B;AACA,SAASC,mBAAT,QAAoC,2BAApC,C,CACA;;;;AAKA,MAAMC,aAAa,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAe;AAAA;;AACjC,QAAMC,IAAI,GAAGP,WAAW,CAACQ,KAAK,IAAIA,KAAK,CAACD,IAAhB,CAAxB;AACA,QAAM;AAACE,IAAAA;AAAD,MAAoBF,IAA1B;AACA,QAAMG,QAAQ,GAAGX,WAAW,EAA5B;AACA,QAAM,CAACY,aAAD,EAAeC,gBAAf,IAAmClB,QAAQ,CAAC,QAAD,CAAjD;;AAGA,MAAG,CAACU,mBAAmB,CAACS,OAAxB,EAAgC;AAC5BP,IAAAA,OAAO,CAACQ,IAAR,CAAa,WAAb;AACH;;AAED,QAAMC,aAAa,GAAGC,CAAD,IAAK;AACtBA,IAAAA,CAAC,CAACC,cAAF,GADsB,CAEtB;;AACAX,IAAAA,OAAO,CAACQ,IAAR,CAAa,aAAb;AACH,GAJD;;AAKA,sBACI,QAAC,aAAD;AAAA,4BACE,QAAC,aAAD;AAAe,MAAA,KAAK,MAApB;AAAqB,MAAA,KAAK,MAA1B;AAA2B,MAAA,KAAK;AAAhC;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,IAAD;AAAM,MAAA,QAAQ,EAAEC,aAAhB;AAAA,8BACE,QAAC,IAAD,CAAM,KAAN;AAAA,gCACI,QAAC,IAAD,CAAM,KAAN;AAAY,UAAA,EAAE,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,GAAD;AAAA,iCACI,QAAC,IAAD,CAAM,KAAN;AACS,YAAA,IAAI,EAAC,OADd;AAES,YAAA,KAAK,EAAE,uBAFhB;AAGS,YAAA,EAAE,EAAC,QAHZ;AAIS,YAAA,IAAI,EAAC,eAJd;AAKS,YAAA,OAAO,MALhB;AAMS,YAAA,QAAQ,EAAGC,CAAD,IAAKJ,gBAAgB,CAACI,CAAC,CAACE,MAAF,CAASC,KAAV;AANxC;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAiBE,QAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,OAAO,EAAC,SAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAjBF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA0BH,CA1CD;;GAAMd,a;UACWL,W,EAEID,W;;;KAHfM,a;AA4CN,eAAeA,aAAf","sourcesContent":["import React, { useState, useEffect } from \"react\"\nimport { Form, Button,Col} from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { register } from \"../../actions/userActions\";\nimport FormContainer from \"../FormContainer\";\nimport Checkoutsteps from \"../Checkoutsteps\";\nimport { saveShippingAddress } from \"../../actions/cartActions\";\n// import { savePaymentMethod } from '../../actions/cartActions'\n\n\n\n\nconst PaymentScreen = ({history}) => {\n    const cart = useSelector(state => state.cart)\n    const {shippingAddress} = cart\n    const dispatch = useDispatch()\n    const [paymentMethod,setPaymentMethod] = useState('PayPal')\n\n\n    if(!saveShippingAddress.address){\n        history.push('/shipping')\n    }\n\n    const submitHandler =(e)=>{\n        e.preventDefault()\n        // dispatch(savePaymentMethod(paymentMethod))\n        history.push('/placeorder')\n    }\n    return (\n        <FormContainer>\n          <Checkoutsteps step1 step2 step3/>  \n          <Form onSubmit={submitHandler}>\n            <Form.Group>\n                <Form.Label as='legend'>select Method</Form.Label>\n                <Col>\n                    <Form.check\n                             type='radio'\n                             label= 'PayPal or Credit Card'\n                             id='paypal'\n                             name='paymentMethod'\n                             checked\n                             onChange={(e)=>setPaymentMethod(e.target.value)}\n                                >\n\n                    </Form.check>\n                </Col>\n            </Form.Group>\n\n            <Button type='submit' variant='primary'>\n                Continue\n            </Button>\n          </Form>\n        </FormContainer>\n    )\n}\n\nexport default PaymentScreen\n"]},"metadata":{},"sourceType":"module"}