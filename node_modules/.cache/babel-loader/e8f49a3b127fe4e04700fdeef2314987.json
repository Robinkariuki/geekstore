{"ast":null,"code":"var _jsxFileName = \"/home/robin/Desktop/robin/econ/shopfrontend/src/components/Screens/PaymentScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Form, Button, Col } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\"; // import { register } from \"../../actions/userActions\";\n\nimport FormContainer from \"../../components\";\nimport Checkoutsteps from \"../../components/Checkoutsteps\";\nimport { saveShippingAddress } from \"../../actions/cartActions\"; // import { savePaymentMethod } from '../../actions/cartActions'\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PaymentScreen = ({\n  history\n}) => {\n  _s();\n\n  const cart = useSelector(state => state.cart);\n  const {\n    shippingAddress\n  } = cart;\n  const dispatch = useDispatch();\n  const [paymentMethod, setPaymentMethod] = useState(\"PayPal\");\n\n  if (!saveShippingAddress.address) {\n    history.push(\"/shipping\");\n  }\n\n  const submitHandler = e => {\n    e.preventDefault(); // dispatch(savePaymentMethod(paymentMethod))\n\n    history.push(\"/placeorder\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(FormContainer, {\n    children: [/*#__PURE__*/_jsxDEV(Checkoutsteps, {\n      step1: true,\n      step2: true,\n      step3: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          as: \"legend\",\n          children: \"select Method\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(Form.Check, {\n            type: \"radio\",\n            label: \"PayPal or Credit Card\",\n            id: \"paypal\",\n            name: \"paymentMethod\",\n            checked: true,\n            onChange: e => setPaymentMethod(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        variant: \"primary\",\n        children: \"Continue\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PaymentScreen, \"gC6NygbkRomoLqRW+Jjs7TbLQ3E=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = PaymentScreen;\nexport default PaymentScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"PaymentScreen\");","map":{"version":3,"sources":["/home/robin/Desktop/robin/econ/shopfrontend/src/components/Screens/PaymentScreen.js"],"names":["React","useState","useEffect","Form","Button","Col","useDispatch","useSelector","FormContainer","Checkoutsteps","saveShippingAddress","PaymentScreen","history","cart","state","shippingAddress","dispatch","paymentMethod","setPaymentMethod","address","push","submitHandler","e","preventDefault","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,IAAT,EAAeC,MAAf,EAAuBC,GAAvB,QAAkC,iBAAlC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC,C,CACA;;AACA,OAAOC,aAAP,MAA0B,kBAA1B;AACA,OAAOC,aAAP,MAA0B,gCAA1B;AACA,SAASC,mBAAT,QAAoC,2BAApC,C,CACA;;;;AAEA,MAAMC,aAAa,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAiB;AAAA;;AACrC,QAAMC,IAAI,GAAGN,WAAW,CAAEO,KAAD,IAAWA,KAAK,CAACD,IAAlB,CAAxB;AACA,QAAM;AAAEE,IAAAA;AAAF,MAAsBF,IAA5B;AACA,QAAMG,QAAQ,GAAGV,WAAW,EAA5B;AACA,QAAM,CAACW,aAAD,EAAgBC,gBAAhB,IAAoCjB,QAAQ,CAAC,QAAD,CAAlD;;AAEA,MAAI,CAACS,mBAAmB,CAACS,OAAzB,EAAkC;AAChCP,IAAAA,OAAO,CAACQ,IAAR,CAAa,WAAb;AACD;;AAED,QAAMC,aAAa,GAAIC,CAAD,IAAO;AAC3BA,IAAAA,CAAC,CAACC,cAAF,GAD2B,CAE3B;;AACAX,IAAAA,OAAO,CAACQ,IAAR,CAAa,aAAb;AACD,GAJD;;AAKA,sBACE,QAAC,aAAD;AAAA,4BACE,QAAC,aAAD;AAAe,MAAA,KAAK,MAApB;AAAqB,MAAA,KAAK,MAA1B;AAA2B,MAAA,KAAK;AAAhC;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,IAAD;AAAM,MAAA,QAAQ,EAAEC,aAAhB;AAAA,8BACE,QAAC,IAAD,CAAM,KAAN;AAAA,gCACE,QAAC,IAAD,CAAM,KAAN;AAAY,UAAA,EAAE,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,GAAD;AAAA,iCACE,QAAC,IAAD,CAAM,KAAN;AACE,YAAA,IAAI,EAAC,OADP;AAEE,YAAA,KAAK,EAAC,uBAFR;AAGE,YAAA,EAAE,EAAC,QAHL;AAIE,YAAA,IAAI,EAAC,eAJP;AAKE,YAAA,OAAO,MALT;AAME,YAAA,QAAQ,EAAGC,CAAD,IAAOJ,gBAAgB,CAACI,CAAC,CAACE,MAAF,CAASC,KAAV;AANnC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAeE,QAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,OAAO,EAAC,SAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAfF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAwBD,CAvCD;;GAAMd,a;UACSJ,W,EAEID,W;;;KAHbK,a;AAyCN,eAAeA,aAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Form, Button, Col } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\n// import { register } from \"../../actions/userActions\";\nimport FormContainer from \"../../components\";\nimport Checkoutsteps from \"../../components/Checkoutsteps\";\nimport { saveShippingAddress } from \"../../actions/cartActions\";\n// import { savePaymentMethod } from '../../actions/cartActions'\n\nconst PaymentScreen = ({ history }) => {\n  const cart = useSelector((state) => state.cart);\n  const { shippingAddress } = cart;\n  const dispatch = useDispatch();\n  const [paymentMethod, setPaymentMethod] = useState(\"PayPal\");\n\n  if (!saveShippingAddress.address) {\n    history.push(\"/shipping\");\n  }\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    // dispatch(savePaymentMethod(paymentMethod))\n    history.push(\"/placeorder\");\n  };\n  return (\n    <FormContainer>\n      <Checkoutsteps step1 step2 step3 />\n      <Form onSubmit={submitHandler}>\n        <Form.Group>\n          <Form.Label as=\"legend\">select Method</Form.Label>\n          <Col>\n            <Form.Check\n              type=\"radio\"\n              label=\"PayPal or Credit Card\"\n              id=\"paypal\"\n              name=\"paymentMethod\"\n              checked\n              onChange={(e) => setPaymentMethod(e.target.value)}\n            ></Form.Check>\n          </Col>\n        </Form.Group>\n\n        <Button type=\"submit\" variant=\"primary\">\n          Continue\n        </Button>\n      </Form>\n    </FormContainer>\n  );\n};\n\nexport default PaymentScreen;\n"]},"metadata":{},"sourceType":"module"}