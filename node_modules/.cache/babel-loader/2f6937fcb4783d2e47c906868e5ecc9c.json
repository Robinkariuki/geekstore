{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport { productListReducer, productDetailsReducer } from \"./reducers/productReducers\";\nimport { cartReducer } from \"./reducers/cartReducers\";\ninm;\nconst reducer = combineReducers({\n  productList: productListReducer,\n  productDetails: productDetailsReducer,\n  cart: cartReducer\n});\nconst cartItemsFromStorage = localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems')) : [];\nconst initialState = {\n  cart: {\n    cartItems: cartItemsFromStorage\n  }\n};\nconst middleware = [thunk];\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\nexport default store;","map":{"version":3,"sources":["/home/robin/Desktop/robin/econ/shopfrontend/src/Store.js"],"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","productListReducer","productDetailsReducer","cartReducer","inm","reducer","productList","productDetails","cart","cartItemsFromStorage","localStorage","getItem","JSON","parse","initialState","cartItems","middleware","store"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA8D,OAA9D;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,kBAAT,EAA4BC,qBAA5B,QAAyD,4BAAzD;AACA,SAASC,WAAT,QAA4B,yBAA5B;AACAC,GAAG;AAEH,MAAMC,OAAO,GAAGR,eAAe,CAAC;AAAES,EAAAA,WAAW,EAAEL,kBAAf;AAChCM,EAAAA,cAAc,EAACL,qBADiB;AAEhCM,EAAAA,IAAI,EAAEL;AAF0B,CAAD,CAA/B;AAIC,MAAMM,oBAAoB,GAAGC,YAAY,CAACC,OAAb,CAAqB,WAArB,IACxBC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAX,CADwB,GACsB,EADnD;AAGD,MAAMG,YAAY,GAAG;AACnBN,EAAAA,IAAI,EAAC;AAAEO,IAAAA,SAAS,EAACN;AAAZ;AADc,CAArB;AAIA,MAAMO,UAAU,GAAG,CAACjB,KAAD,CAAnB;AACA,MAAMkB,KAAK,GAAGrB,WAAW,CACvBS,OADuB,EAEvBS,YAFuB,EAGvBd,mBAAmB,CAACF,eAAe,CAAC,GAAGkB,UAAJ,CAAhB,CAHI,CAAzB;AAMA,eAAeC,KAAf","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport { productListReducer,productDetailsReducer } from \"./reducers/productReducers\";\nimport { cartReducer } from \"./reducers/cartReducers\";\ninm\n\nconst reducer = combineReducers({ productList: productListReducer,\nproductDetails:productDetailsReducer,\ncart: cartReducer,\n });\n const cartItemsFromStorage = localStorage.getItem('cartItems') ? \n      JSON.parse(localStorage.getItem('cartItems')):[]\n        \nconst initialState = {\n  cart:{ cartItems:cartItemsFromStorage}\n\n};\nconst middleware = [thunk];\nconst store = createStore(\n  reducer,\n  initialState,\n  composeWithDevTools(applyMiddleware(...middleware))\n);\n\nexport default store;\n"]},"metadata":{},"sourceType":"module"}